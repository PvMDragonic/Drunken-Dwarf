CREATE TABLE users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    in_clan BOOLEAN DEFAULT 1 NOT NULL,
    is_free BOOLEAN DEFAULT 0 NOT NULL
);

CREATE TABLE ranks (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    rank TEXT NOT NULL
)

CREATE TABLE users_join (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_user INTEGER NOT NULL,
    join_date DATE NOT NULL,
    FOREIGN KEY (id_user) REFERENCES users(id) ON DELETE CASCADE
)

CREATE TABLE users_leave (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_user INTEGER NOT NULL,
    leave_date DATE NOT NULL,
    FOREIGN KEY (id_user) REFERENCES users(id) ON DELETE CASCADE
)

CREATE TABLE users_data (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_user INTEGER NOT NULL,
    id_rank INTEGER NOT NULL,
    xp INTEGER NOT NULL,
    kc INTEGER NOT NULL,
    xp_date DATE NOT NULL,
    FOREIGN KEY (id_user) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (id_rank) REFERENCES ranks(id)
); 

CREATE TABLE users_names (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_user INTEGER NOT NULL,
    username TEXT NOT NULL,
    name_date DATE NOT NULL,
    FOREIGN KEY (id_user) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE users_stats (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_user INTEGER NOT NULL,
    stat1 INTEGER, stat2 INTEGER, stat3 INTEGER, stat4 INTEGER, stat5 INTEGER,
    stat6 INTEGER, stat7 INTEGER, stat8 INTEGER, stat9 INTEGER, stat10 INTEGER,
    stat11 INTEGER, stat12 INTEGER, stat13 INTEGER, stat14 INTEGER, stat15 INTEGER,
    stat16 INTEGER, stat17 INTEGER, stat18 INTEGER, stat19 INTEGER, stat20 INTEGER,
    stat21 INTEGER, stat22 INTEGER, stat23 INTEGER, stat24 INTEGER, stat25 INTEGER,
    stat26 INTEGER, stat27 INTEGER, stat28 INTEGER, stat29 INTEGER, stat30 INTEGER,
    stat31 INTEGER, stat32 INTEGER, stat33 INTEGER, stat34 INTEGER, stat35 INTEGER,
    stat36 INTEGER, stat37 INTEGER, stat38 INTEGER, stat39 INTEGER, stat40 INTEGER,
    stat41 INTEGER, stat42 INTEGER, stat43 INTEGER, stat44 INTEGER, stat45 INTEGER,
    stat46 INTEGER, stat47 INTEGER, stat48 INTEGER, stat49 INTEGER, stat50 INTEGER,
    stat51 INTEGER, stat52 INTEGER, stat53 INTEGER, stat54 INTEGER, stat55 INTEGER,
    stat56 INTEGER, stat57 INTEGER, stat58 INTEGER, stat59 INTEGER, stat60 INTEGER,
    stat61 INTEGER, stat62 INTEGER, stat63 INTEGER, stat64 INTEGER, stat65 INTEGER,
    stat66 INTEGER, stat67 INTEGER, stat68 INTEGER, stat69 INTEGER, stat70 INTEGER,
    stat71 INTEGER, stat72 INTEGER, stat73 INTEGER, stat74 INTEGER, stat75 INTEGER,
    stat76 INTEGER, stat77 INTEGER, stat78 INTEGER, stat79 INTEGER, stat80 INTEGER,
    stat81 INTEGER, stat82 INTEGER, stat83 INTEGER, stat84 INTEGER, stat85 INTEGER,
    stat86 INTEGER, stat87 INTEGER, stat88 INTEGER, stat89 INTEGER, stat90 INTEGER,
    stat91 INTEGER, stat92 INTEGER, stat93 INTEGER, stat94 INTEGER, stat95 INTEGER,
    stat96 INTEGER, stat97 INTEGER, stat98 INTEGER, stat99 INTEGER, stat100 INTEGER,
    stat101 INTEGER, stat102 INTEGER, stat103 INTEGER, stat104 INTEGER, stat105 INTEGER,
    stat106 INTEGER, stat107 INTEGER, stat108 INTEGER, stat109 INTEGER, stat110 INTEGER,
    stat111 INTEGER, stat112 INTEGER, stat113 INTEGER, stat114 INTEGER, stat115 INTEGER,
    stat116 INTEGER, stat117 INTEGER, stat118 INTEGER, stat119 INTEGER, stat120 INTEGER,
    stat121 INTEGER, stat122 INTEGER, stat123 INTEGER, stat124 INTEGER, stat125 INTEGER,
    stat126 INTEGER, stat127 INTEGER, stat128 INTEGER, stat129 INTEGER, stat130 INTEGER,
    stat131 INTEGER, stat132 INTEGER, stat133 INTEGER, stat134 INTEGER, stat135 INTEGER,
    stat136 INTEGER, stat137 INTEGER, stat138 INTEGER, stat139 INTEGER, stat140 INTEGER,
    stat141 INTEGER, stat142 INTEGER, stat143 INTEGER, stat144 INTEGER, stat145 INTEGER,
    stat146 INTEGER, stat147 INTEGER, stat148 INTEGER, stat149 INTEGER, stat150 INTEGER,
    FOREIGN KEY (id_user) REFERENCES users(id) ON DELETE CASCADE
);